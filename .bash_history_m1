exit
ping w1
docker -v
kubectl -v
kubectl --version
sudo -i
exit
cd /etc/kubernetes/
ls
mkdir /vagrant/files/k8
cd /vagrant/files/k8/
cp /etc/kubernetes/config master-config
vim
cd ..
mkdir etcd
cd etcd/
ls
exit
sudo -i
exit
ls
etcd
yum install etcd -y
cd /etc/etcd/
ls
more etcd.conf 
exit
ls
sudo -u
sudo -i
exit
ls
cd /vagrant/files/etcd/
cp /etc/etcd/etcd.conf .
vim
ls
cd ..
ls
cd k8/
ls
cp /etc/kubernetes/apiserver .
vim
ls
cd ..
ls
cd ..
ls
cd scripts/
ls
vim
ls
vagrant status
exit
cp /etc/kubernetes/kubelet /vagrant/files/k8/
cd /vagrant/files/k8/
ls
vim
exit
sudo -i
exit
cp /vagrant/files/k8/kubelet 
cp /vagrant/files/k8/kubelet .
ls
mv kubelet kubelet.tmp
cat kubelet.tmp 
cp kubelet.tmp kubelet
sed -i s/KUBELET_HOSTNAME/KUBELET_HOSTNAME="--hostname-override=w1"/g kubelet
cat kubelet
rm kubelet
cp kubelet.tmp kubelet
sed -i s/KUBELET_HOSTNAME/KUBELET_HOSTNAME=\"--hostname-override=w1\"/g kubelet
cat kubelet
exit
ls
cd /etc/kubernetes/
ls
exit
sudo -i
exit
cd /etc/etcd
ls
exit
sudo -i
exit
kubectl get nodes
exit
sudo -i
exit
kubectl get nodes
exit
sudo -i
kubectl get nodes
docker ps
exit
kubectl get pods
cd /vagrant/scripts/
ls
cd worker/
ls
./start-services.sh 
more start-services.sh 
cd ..
cd master/
ls
./start-services.sh 
kubectl get nodes
exit
sudo -i
exit
kubectl get nodes
ls
cd .kube/
ls
cd ..
ls
kubectl --version
ls
cd /vagrant/files/
ls
cd ..
cd scripts/
ls
cd worker/
ls
./start-services.sh 
exit
sudo -i
exit
kubectl get nodes
ls
cd /vagrant/scripts/master/
ls
./start-services.sh 
kubectl get nodes
vim
cd ..
ls
cd ..
ls
vim
exit
sudo -i
exit
kubectl get nodes
ping w1
exit
sudo -i
exit
kubectl get nodes
exit
ping w1
sudo -i
exit
cd /vagrant/
ls
vagrant ls
vim
cd
ls
kubectl get pods --all-namespaces | grep dashboard
vim
exit
ls
sudo -i
vim
ls
exit
cd /vagrant/
ls
cd c
cd scripts/
ls
cd master/
ls
./install-webui.sh 
exit
kubectl proxy
kubectl proxy -h
kubectl proxy --accept-hosts=0.0.0.0
exit
sudo -i
exit
kubectl proxy -h
kubectl proxy
ip addr
kubectl proxy 10.0.0.10
kubectl proxy --address='10.0.0.10'
kubectl proxy &
ls
curl
curl 127.0.0.1:8001
sudo kill -9 4056
kubectl proxy --address='0.0.0.0'
kubectl proxy --address='0.0.0.0' &
ls
kubectl pods get
kubectl get pods
kubectl get nodes
cd /vagrant/scripts/
ls
cd master/
ls
cat install-webui.sh 
kubectl create -f https://git.io/kube-dashboard --validate=false
kubectl get services
kubectl get pods --all-namespaces
kubectl --version
exit
nmap -sT -O localhost
ls
cd /etc/kubernetes/
ls
kubectl --kubeconfig=./admin.conf proxy -p 80
kubectl --version
exit
history | grep proxy
nmap
sudo yum install nmap
nmap -sT -O localhost
sudo -i
exit
cd /etc/
ls
cd kubernetes/
ls
cd manifests/
ls
cd ..
ls
cd ..
ls
cd
ls
cd /vagrant/
ls
cd scripts/
ls
cd centos/
ls
more start-services.sh 
./start-services.sh 
systemctl enable kube-proxy kubelet docker
exit
kubectl get nodes
sudo -i
exit
cd /vagrant/scripts/
ls
cd centos/
ls
./start-services.sh 
kubectl --version
kubectl -version
kubectl -v
kubectl version
kubeadm init
net.bridge.bridge-nf-call-iptables = 1
kubeadm init
vim /etc/sysctl.conf 
kubeadm init
sysctl net.bridge.bridge-nf-call-iptables=1
sysctl net.bridge.bridge-nf-call-ip6tables=1
kubeadm init
exit
sudo
sudo -i
exit
kubeadm token
kubeadm token list
kubeadm token
kubeadm token list -q
kubeadm token list --kubeconfig
kubeadm token list --kubeconfig test.conf
kubeadm token list
kubeadm token list | tail -n 1
kubeadm token list | tail -n 1 | awk '{print $1}'
kubeadm token list | tail -n 1 | awk '{print $1}' > token
more token 
exit
sudo -i
exit
cd /etc/kubernetes/
grep 10.0.2.15
grep 10.0.2.15 .
grep -r 10.0.2.15 .
exit
cd /etc/kubernetes/
ls
vim admin.conf 
sudo -i
exit
kubectl get nodes
cd /etc/kubernetes/
ls
grep -r 8080 .
grep -r 10 .
docker -v
kubectl --server=10.0.0.10:8080 get nodes
ls
cd manifests/
ls
vim kube-apiserver.yaml 
kubectl --server=10.0.0.10:6443 get nodes
vim kube-apiserver.yaml 
ls
cd ..
ls
vim admin.conf 
kubectl --kubeconfig /etc/kubernetes/admin.conf 
kubectl --kubeconfig /etc/kubernetes/admin.conf get no
kubectl get nodes
ls
cd
ls
cd .kube/
ls
cp /etc/kubernetes/admin.conf config
cd
kubectl get nodes
exit
kubectl get nodes
sudo -o
sudo -i
exit
kubectl get nodes
cd
ls
kubectl get nodes
cd /home/vagrant/
ls
cd
ls
mkdir .kube
cd .kube/
ls
cp /etc/kubernetes/admin.conf config
ls
kubectl get nodes
exit
sudo -i
exit
cd /etc/kubernetes/
ls
vim
kubectl get nodes
curl -L http://127.0.0.1:10250/healthz
cd /var/log/
ls
cd ..
find -name "kubelet.log"
docker -version
docker --version
exit
sudo -i
exit
kubectl get nodes
etcd
journalctl -u kubelet --all
curl -k https://10.0.0.10:6443/api/v1/nodes?fieldSelector=metadata.name%3Dm1&resourceVersion=0
curl -k https://10.0.0.10:6443/api/v1/nodes
exit
cd .kube/
ls
cd c
cd cache/
ls
cd discovery/
ls
cd 10.0.0.10_6443/
ls
cd ..
ls
cd ..
ls
vim 
cd /etc/kubernetes/
ls
vim admin.conf 
vim kubelet.conf 
cd controller-manager.conf 
vim controller-manager.conf 
cd manifests/
ls
vim
cd /vagrant/scripts/
ls
cd master/
ls
more init-master.sh 
./init-master.sh 
ls
cd ..
ls
cd centos/
ls
more start-services.sh 
systemctl stop docker
systemctl stop kubelet
systemctl start docker
systemctl start kubelet
ls
kubectl get nodes
ls
cd /etc/
ls
cd kubernetes/

vim
systemctl stop kubelet
systemctl stop docker
systemctl stop etcd
systemctl start etcd
kubectl get nodes
systemctl start docker
systemctl start kubelet
kubelet get nodes
exit
kubectl get nodes
ls
sudo -i
curl -k https://10.0.0.10:6443/api/v1/nodes
ls
cd
sudo -i
ls
exit
cd /etc/modules-load.d/
ls
cd ..
ls
exit
sudo -i
exit
more /etc/sysconfig/docker-storage-setup 
exit
kubectl get nodes
kubectl --help
kubectl describe node w1
exit
sudo -i
exit
kubectl get nodes
systemctl stop kubelet
systemctl stop docker
systemctl start docker
systemctl start kubelet
kubectl get nodes
systemctl stop docker
systemctl start kubelet
systemctl stop kubelet
vim /etc/systemd/system/kubelet.service.d/10-kubeadm.conf 
systemctl stop kubelet
kuebadm reset
kubeadm reset
systemctl daemon-reload
systemctl stop kubelet
systemctl stop docker
ls
cd /vagrant/
ls
cd scripts/
ls
cd base/
ls
more install-k8.sh 
cd ..
cd master/
ls
more init-master.sh 
kubeadm init --apiserver-advertise-address=$1
kubeadm reset
systemctl start docker
systemctl start kubelet
history | grep conf
systemctl daemon-reload
systemctl start kubelet
systemctl status kubelet.service
vim /etc/systemd/system/kubelet.service.d/10-kubeadm.conf 
ls
systemctl daemon-reload
systemctl start kubelet
exit
kubectl get nodes
sudo -i
exit
vim /etc/systemd/system/kubelet.service.d/10-kubeadm.conf 
systemctl stop kubectl
systemctl stop kubelet
systemctl daemon-reload
systemctl stop kubelet
systemctl start kubelet
vim /etc/systemd/system/kubelet.service.d/10-kubeadm.conf 
systemctl daemon-reload
systemctl stop kubelet
systemctl start kubelet
ls
cd -
cd /etc/systemd/system/
ls
more kubelet.service
cd kubelet.service
cd kubelet.service.d/
ls
more 10-kubeadm.conf 
exit
sudo -i
exit
sudo -i
ls
cd /etc/systemd/system/kubelet.service.d/
ls
vim 10-kubeadm.conf 
systemctl --help
systemctl --help | grep reload
systemctl daemon-reload
systemctl stop kubelet
systemctl start kubelet
vim
systemctl daemon-reload
systemctl start kubelet
ls
kubectl get nodes
kubectl describe node w1
kubeadm reset
ls
cd /vagrant/scripts/master/
ls
more init-master.sh 
more /etc/sysconfig/docker-storage-setup 
reboot
cd /vagrant/
ls
cd scripts/
ls
cd master/
ls
more init-master.sh 
systemctl start docker
systemctl start kubelet
kubeadm init --apiserver-advertise-address=10.0.0.10
sysctl net.bridge.bridge-nf-call-iptables=1
sysctl net.bridge.bridge-nf-call-ip6tables=1
kubeadm init --apiserver-advertise-address=10.0.0.10
kubectl get nodes
exit
ls
sudo -i
exit
kubectl get nodes
kubectl describe node m1
cd /etc/systemd/system/kubelet.service.d/
ls
vim 10-kubeadm.conf 
systemctl daemon-reload
systemctl stop kubectl
systemctl stop kubelet
systemctl stop docker
systemctl start docker
systemctl start kubelet
kubectl get nodes
vim 10-kubeadm.conf 
systemctl daemon-reload
systemctl stop kubelet
systemctl stop docker
systemctl start docker
exit
sudo -i
exit
docker --version
exit
kubectl get nodes
exit
sudo -i
exit
cd /vagrant/scripts/
ls
cd master/
ls
more install-webui.sh 
kubectl create -f https://git.io/kube-dashboard --validate=false
exit
sudo -i
exit
curl -k https://127.0.0.1:8001/ui
curl -k https://127.0.0.1:8001
curl -k https://10.0.0.10:8001
curl http://10.0.0.10:8001
curl http://10.0.0.10:8001/ui
kubectl get pods
ls
kubectl get services
ls
cd /vagrant/scripts/
ls
cd master/
ls
more install-webui.sh 
kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
kubectl proxy &
curl http://10.0.0.10:8001/ui
curl -k https://10.0.0.10:8001
curl -k https://10.0.0.10:8001/ui
curl -k https://127.0.0.1:8001/ui
curl http://127.0.0.1:8001/ui
curl  https://127.0.0.1:8001/ui
curl  https://localhost:8001/ui
kill -9 7852
ls
kubectl proxy --help
kubectl proxy --accept-hosts=0.0.0.0
kubectl proxy --accept-hosts=0.0.0.0 --address=10.0.2.2
kubectl proxy --accept-hosts='*'
kubectl proxy --accept-hosts='.*'
kubectl proxy --accept-hosts='.*' &
curl -k 127.0.0.1:8001/ui
curl -k https://127.0.0.1:8001/ui
curl localhost:8001/custom/api/v1/pods
exit
sudo -i
exit
kubectl get nodes
ps aux
ps aux | grep proxy
curl -k https://localhost:8001/ui
curl -k http://localhost:8001/ui
curl -k https://localhost:443/ui
curl -I http://localhost:8001
curl -i -s http://localhost:8001/ui
curl -i -s http://localhost:8001/ui/
curl -i -s http://localhost:8001/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy
curl -i -s http://localhost:8001/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy/
ls
cd /vagrant/
ls
cd scripts/
ls
cd centos/
ls
more restart-network.sh 
nmcli connection reload
systemctl restart network.service
kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$'
ps aux | grep proxy
kill -9 8922
kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$'
kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$' &
curl -i -s http://localhost:8001/ui
curl -i -s http://localhost:8001/ui/
curl -i -s http://localhost:8001/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy/
kubectl get ep kubernetes-dashboard
ls
cd ..
ls
cd master/
ls
more install-webui.sh 
kubectl create -f https://git.io/kube-dashboard --validate=false
kubectl get services
ls
kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$' &
docker ps
docker ps -a
cd
ls
curl -k http://localhost:8001/ui
curl -k -s http://localhost:8001/ui/
turl -k -s http://local
curl -k -s http://l/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy
curl -k -s http://localhost:8001/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy
curl -k -l -s http://localhost:8001/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy/
curl -k -s http://localhost:8001/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy/
curl http://localhost:9090
curl http://localhost:9091
cd /vagrant/
ls
cd scripts/
ls
cd master/
ls
more install-webui.sh 
kubectl get deployments
kubectl get pods
kubectl get services
kubectl get pods
ls
kubectl get nodes
more install-webui.sh 
kubectl create -f https://git.io/kube-dashboard --validate=false
exit
cd .kube/
ls
rm config 
cp /etc/kubernetes/admin.conf config
kubectl get pods
cd cache/
ls
cd discovery/
ls
cd 10.0.0.10_6443/
ls
more servergroups.json 
ls
kubectl run hello-node --image=hello-node:v1 --port=8080
kubectl get deployments
kubectl delete hello-node
kubectl delete deployment hello-node
kubectl get deployments
cd
cd /vagrant/scripts/
ls
cd master/
ls
more install-webui.sh 
kubectl get services
exit
ls
dls
kubectl get nodes
sudo -i
kubectl get pods
ls
cd /etc/kubernetes/
ls
more admin.conf 
sudo -i
exit
kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
exit
kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
sudo -i
exit
kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
kubectl get deployments
kubectl proxy --address='0.0.0.0' --port=9090 --accept-hosts='^*$' &
kill -9 9440
kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$' &
kubectl get pods --all-namespaces
exit
sudo -i
exit
Error: 'dial tcp 10.244.1.2:9090: getsockopt: connection timed out'
kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$' &
exit
sudo -i
exit
kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$' &
kubectl get pods
cd /vagrant/scripts/
ls
cd master/
ls
cd ..
ls
cd centos/
ls
./start-services.sh 
kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$' &
kill -9 3966
kubectl get pods
cd /vagrant/
ls
ping w1
ls
cd scripts/
ls
cd centos/
ls
./restart-network.sh 
ping w1
exit
sudo -i
exit
sudo -i
exit
kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$' &
route add -net 10.244.1.2 netmask 255.255.255.255 gw 10.0.0.51
ip route add -net 10.244.1.2 netmask 255.255.255.255 gw 10.0.0.51
yum install route -y
ip route show
vim /etc/sysconfig/network
ping w1
route
/sbin/route add -net 10.244.1.2 netmask 255.255.255.255 gw 10.0.0.51
cd /sbin/
ls
route
./route
yum install net-tools
route
route add -net 10.244.1.2 netmask 255.255.255.255 gw 10.0.0.51
ls
history
docker ps -a
kubectl service --all
kubectl get serivces
kubectl get serivce
kubectl service --help
kubectl
kubectl get service
kubectl get service --all
kubectl get service -a
kubectl get deployment -a
history
kubectl get clusterrolebinding
kubectl get clusterrolebinding kubernetes-dashboard
kubectl describe kubernetes-dashboard
kubectl describe clusterrolebinding kubernetes-dashboard
kubectl describe pod kubernetes-dashboard
kubectl describe service kubernetes-dashboard
kubectl get --help
kubectl get pods
kubectl get replicationcontroller
kubectl get all
kubectl get svc/kubernetes
kubectl describe svc/kubernetes
curl http://127.0.0.1:8080/apis/extensions/v1beta1
curl http://127.0.0.1:8001/apis/extensions/v1beta1
curl http://127.0.0.1:8001/apis/extensions/v1beta1/thirdpartyresources
curl -X LIST http://127.0.0.1:8001/apis/extenstions/v1beta/thirdpartyresources
curl -X LIST http://127.0.0.1:8001/apis/extenstions/v1beta/replicasets
curl -X LIST http://127.0.0.1:8001/apis/extensions/v1beta1/replicasets
deployments
curl -X LIST http://127.0.0.1:8001/apis/extensions/v1beta1/deployments
curl http://127.0.0.1:8001/apis/extensions/v1beta1/deployments
/apis/extensions/v1beta1/namespaces/kube-system/deployments/kubernetes-dashboard
curl http://127.0.0.1/apis/extensions/v1beta1/namespaces/kube-system/deployments/kubernetes-dashboard
curl http://127.0.0.1:8001/apis/extensions/v1beta1/namespaces/kube-system/deployments/kubernetes-dashboard
cd
ls
cd .kube/
ls
vim
curl http://127.0.0.1:6443
curl http://127.0.0.1:6443/apis
curl http://127.0.0.1:8001/apis/extensions/v1beta1/namespaces/kube-system/deployments/kubernetes-dashboard
curl http://127.0.0.1:8001/apis/extensions/v1beta1/namespaces/kube-system/pods
curl http://127.0.0.1:8001/apis/extensions/v1beta1/namespaces/kube-system/deployments
curl http://127.0.0.1:8001/apis/extensions/v1beta1/namespaces/kube-system/deployments/pods
curl http://127.0.0.1:8001/apis/extensions/v1beta1/namespaces/kube-system/deployments/
curl http://127.0.0.1:8001/apis/extensions/v1beta1/namespaces/kube-system/deployments/containers
curl http://127.0.0.1:8001/apis/extensions/v1beta1/namespaces/kube-system/deployments/
curl http://127.0.0.1:8001/apis/extensions/v1beta1/namespaces/kube-system/pods
curl http://127.0.0.1:8001/apis/namespaces/kube-system/pods
curl http://127.0.0.1:8001/apis/namespaces/
curl http://127.0.0.1:8001/apis/v1/namespaces/
curl http://127.0.0.1:8001/apis/v1/namespaces/default
curl http://127.0.0.1:8001/
curl http://127.0.0.1:8001/ui/
curl http://127.0.0.1:8001/apis/apps
curl http://127.0.0.1:8001/apis/v1
curl http://127.0.0.1:8001/apis/v1/
curl http://127.0.0.1:8001/api/v1/
curl http://127.0.0.1:8001/api/v1/namespaces
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status}
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | del(.status.containerStatuses)'
yum install -y jq
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | del(.status.containerStatuses)'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name } | del(.status.containerStatuses)'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name }'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name="kubernetes-dashboard*", status: .status} | del(.status.containerStatuses)'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name="kubernetes-dashboard-2039414953-pz72q", status: .status} | del(.status.containerStatuses)'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name="kubernetes-dashboard-2039414953-pz72q"'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods -o template
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods -o template --template='{{range.items}}{{range.status}}'
ls
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name="kubernetes-dashboard*", status: .status} | del(.status.containerStatuses)'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | del(.status.containerStatuses)'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status}'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.podIP="10.244.1.2")'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.podIP=="10.244.1.2")'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.podIP=="10.244.1.2")'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatueses.name=="kubernetes-dashboard")'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatueses[].name=="kubernetes-dashboard")'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP'
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP' | tr \" \s
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP' | tr \"
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP' | sed 's/\"//g'
exit
kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
sudo -i
exit
cd /vagrant/scripts/
ls
cd post/
ls
exit
sudo -i
exit
/vagrant/scripts/post/install-webui.sh 
vim
cd /vagrant/scripts/
ls
cd post/
ls
vim
./install-webui.sh 
vim
./install-webui.sh 
vim
more install-webui.sh 
curl http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g'
curl -q http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g'
curl -q http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP'
curl -q http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")'
curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g'
vim
exit
sudo -i
exit
sudo -i
exit
ps aux
ps aux | grep proxy
nohub
nohup
exit
sudo -i
exit
ls
cd /vagrant/scripts/post/
ls
more install-webui.sh 
nohup kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$' &
kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
POD_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP' | sed 's/\"//g')
echo $POD_IP
curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP' | sed 's/\"//g'
POD_IP=curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP' | sed 's/\"//g'
POD=$(echo "Hello")
$POD
echo POD
POD_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP' | sed 's/\"//g')
$POD_IP
echo POD_IP
echo $POD_IP
exit
sudo -i
exit
cd /vagrant/scripts/
ls
cd post/
ls
rm nohup.out 
vim
./install-webui.sh 
more 
ls
more install-webui.sh 
eno $POD_IP
echo $POD_IP
POD_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP' | sed 's/\"//g')
echo $POD_IP
more install-webui.sh 
NOTE_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g')
route add -net $POD_IP netmask 255.255.255.255 gw $NODE_IP
route add
echo $NOTE_IP
route add -net 10.244.1.2 netmask 255.255.255.255 gw 10.0.0.51
exit
sudo -i
exit
ls
cd /vagrant/
ls
cd scripts/
ls
cd post/
ls
./install-webui.sh 
more install-webui.sh 
echo $POD_IP
POD_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP' | sed 's/\"//g')
echo $POD_IP
echo $NODE_IP
NOTE_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g')
echo $NODE_IP
NOTE_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g')
echo $NODE_IP
NOTE_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g')
echo $NODE_IP
POD_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.podIP' | sed 's/\"//g')
echo $POD_IP
curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g'
NOTE_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g')
echo $NODE_IP
curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g'
BLE=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g')
$BLE
NODE_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g')
echo $NODE_IP
more install-webui.sh 
route add -net $POD_IP netmask 255.255.255.255 gw $NODE_IP
NOTE_IP=$(curl -s http://127.0.0.1:8001/api/v1/namespaces/kube-system/pods | jq '.items[] | { name: .metadata.name, status: .status} | select(.status.containerStatuses[].name=="kubernetes-dashboard")' | jq '.status.hostIP' | sed 's/\"//g')
echo $NODE_IP
vim
cd ..
ls
cd master/
ls
cd ..
ls
cd master/
ls
cd ..
ls
cd scripts/
grep -r file .
ls
cd base/
l
ls
more install-
vim
ls
cd ..
ls
cd centos/
ls
more start-services.sh 
ls
cd ..
sl
ls
grep -r "-f" .
cd ..
vim
exit
sudo -i
exit
kubectl get nodes
exit
sudo -i
exit
kubectl get nodes
cd /vagrant/scripts/post/
ls
more install-webui.sh 
vim
./install-webui.sh 
exit
sudo -i
exit
kubectl get nodes
ps aux | grep proxy
kubectl get deployments --all
kubectl get deployments -a
ls
cd /vagrant/
ls
cd scripts/
ls
cd post/
ls
./install-webui.sh 
exit
sudo -i
exit
ps aux | grep proxy
kill -9 5323
kill -9 7887
ls
cd /vagrant/scripts/
ls
cd post/
ls
more install-
more install-webui.sh 
sudo kubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='^*$' &
exit
sudo -i
exit
ps aux | grep proxy
kill 8292
ps aux | grep proxy
kill -9 8675
kill -9 8683
ls
exit
sudo -i
exit
ps aux | grep proxy
exit
sudo -i
exit
ls
ps aux | grep proxy
exit
cd /vagrant/
ls
cd scripts/
ls
cd post/
ls
./start-proxy.sh 
vim
./start-proxy.sh 
ls
ps aux | grep proxy
kill -9 10290
kill -9 10295
exit
sudo -i
ps aux | grep proxy
sudp -i
sudo -i
exit
ps aux | grep proxy
kill 10769

ps aux | grep proxy
exit
sudo -i
exit
kubectl get nodes
exit
sudo -i
exit
ls
kubectl get nodes
exit
sudo -i
exit
kubectl get nodes
kubectl get pods -a
kubectl get pods --all
kubectl get pods --show-all
exit
sudo -i
exit
ls
kubectl get pods -a
ls
cd /vagrant/
ls
cd scripts/
ls
kubectl -v
kubectl version
etcd
yum install etcd -y
ls
cd post/
ls
more install-
more install-webui.sh 
kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
kubectl get deployments
kubectl get deployments -a
kubectl get services
kubectl get services -a
ls
cd
ls
cd .kube/
ls
cd config 
more config 
kubectl describe endpoints --namespace=kube-system
kubectl get pods --namespace=kube-system
ls
cd /vagrant/scripts/
ls
cd post/
ls
more install-pod-network.sh 
kubectl apply --filename https://git.io/weave-kube-1.6
kubectl get pods --namespace=kube-system
exit
sudo -i
exit
kubectl describe pods --namespace=kube-system
kubectl get pods --namespace=kube-system
exit
sudo -i
exit
kubectl get pods --namespace=kube-system
kubectl get nodes
kubectl get pods --namespace=kube-system
cd /vagrant/scripts/
ls
cd post/
ls
more install-pod-network.sh 
kubectl delete --filename https://git.io/weave-kube-1.6
exit
sudo -i
exit
kubectl get pods --namespace=kube-system
exit
sudo -i
exit
kubectl get nodes --namespace=kube-system
exit
sudo -i
exit
kubectl get pods --namespace=kube-system
exit
sudo -i
exit
kubectl get pods --namespace=kube-system
kubectl version
ping 10.0.0.10
ls
cd /vagrant/
ls
cd scripts/
ls
cd common/
ls
./restart-network.sh 
kubectl get pods --namespace=kube-system
exit
sudo -i
exit
kubectl get pods --namespace=kube-system
exit
sudo -i
exit
kubectl get pods --namespace=kube-system
cd /vagrant/
ls
cd scripts/
ls
cd common/
ks
ls
./restart-network.sh 
kubectl get pods --namespace=kube-system
kubectl describe pods kube-dns-3913472980-2k04l
kubectl describe pod kube-dns-3913472980-2k04l
kubectl describe pod kube-dns-3913472980-2k04l --namespace=kube-system
kubectl get pods --namespace=kube-system
exit
sudo -i
exit
ls
kubectl get pods --namespace=kube-system
exit
sudo -i
exit
